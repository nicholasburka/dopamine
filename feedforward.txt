model {

  for(stim in 1:n.stim) {
    output[stim] ~ dnorm(out[stim], sig)
    
    
    for (r in 1:n.reward) {
      reward.activation[r,stim] <- 1/(1+exp(-sum(inprod(input[,stim], i.to.r[,r]))))
      for (i in 1:length(i.to.r[,r])) {
        multed[i] <- input[i,stim] * i.to.r[i,r]
      }
    }
    
    out[stim] <- 1/(1+exp(-sum(inprod(reward.activation[,stim], r.to.o))))
    
  }
  
  sig ~ dunif(.01,.02)
  
  for(r in 1:n.reward) {
    for (o in 1:n.outputs) {
      r.to.o[r,o] ~ dnorm(ro.mu[r,o], pow(ro.sd[r,o], -2))
      ro.mu[r,o] ~ dunif(-1,1)
      ro.sd[r,o] ~ dunif(-1,1)
    }
  }
  for (i in 1:n.inputs) {
    for (r in 1:n.reward) {
      i.to.r[i,r] ~ dnorm(ir.mu[i,r],pow(ir.sd[i,r], -2))
      ir.mu[i,r] ~ dunif(-1,1)
      ir.sd[i,r] ~ dunif(-1,1)
    }
  }

}